#+title: homework
#+title: Lecture 
#+author: Kazure Zheng
#+PROPERTY: header-args:cpp :prologue "#include <iostream>\n#include <string>\n#include "/home/kazure/Documents/cs_learning/cs106l/STL/simpio.h"\n\nusing namespace std;\n\nint main() {\n" :epilogue "\nreturn 0;\n}"



* hw02

** q1_1
#+begin_src python 
  some_numbers = make_array(-1, -3, -6, -10, -15)

  third_element = some_numbers[2]
  third_element
#+end_src


** q1_2
#+begin_src python 
  blank_a = "third"
  blank_b = "fourth"
  blank_c = 0
  blank_d = 3
  elements_of_some_numbers = Table().with_columns(
      "English name for position", make_array("first", "second", blank_a, blank_b, "fifth"),
      "Index",                     make_array(blank_c, 1, 2, blank_d, 4),
      "Element",                   some_numbers)
  elements_of_some_numbers
#+end_src



** q1_3
#+begin_src  python 
  index_of_last_element = 141
#+end_src



** q1_4
#+begin_src python
  president_birth_years = Table.read_table("president_births.csv").column('Birth Year')

  most_recent_birth_year = president_birth_years[-1]
  most_recent_birth_year
#+end_src


** q1_5
#+begin_src python 
  min_of_birth_years = min(president_birth_years[0], president_birth_years[15], president_birth_years[-1])
  min_of_birth_years
#+end_src


** q2_1
#+begin_src python 
  first_product = 42 * 157
  second_product = -4224 * 157
  third_product = 424224242 * 157
  fourth_product = 250 * 157
  print("First Product:", first_product)
  print("Second Product:", second_product)
  print("Third Product:", third_product)
  print("Fourth Product:", fourth_product)
#+end_src


** q2_2
#+begin_src python 
  numbers = make_array(42, -4224, 424224242, 250)
  products = make_array(0, 0, 0, 0)
  for i in range(4):
    products[i] = numbers[i] * 157
  products
#+end_src


** q2_3
#+begin_src python 
  correct_products = make_array(0,0,0,0)
  for i in range(4):
      correct_products[i] = numbers[i] * 1577
  correct_products
#+end_src


** q2_4
#+begin_src python 
  max_temperatures = Table.read_table("temperatures.csv").column("Daily Max Temperature")
  max_temperatures_celsius = max_temperatures
  for i in range(len(max_temperatures)):
      max_temperatures_celsius[i] = (max_temperatures[i] - 32) * 5 / 9
  celsius_temps_rounded = np.round(max_temperatures_celsius)
  celsius_temps_rounded
#+end_src


** q2_4
#+begin_src python 
  max_temperatures = Table.read_table("temperatures.csv").column("Daily Max Temperature")

  max_temperatures_celsius = np.zeros_like(max_temperatures, dtype=float)

  # 遍历每个华氏温度并转换为摄氏温度
  for i in range(len(max_temperatures)):
      max_temperatures_celsius[i] = (max_temperatures[i] - 32) * 5 / 9

  # 将摄氏温度四舍五入到最接近的整数
  celsius_temps_rounded = np.round(max_temperatures_celsius)
  celsius_temps_rounded

#+end_src


** q2_5
#+begin_src python 
  min_temperatures = Table.read_table("temperatures.csv").column("Daily Min Temperature")

  celsius_temperature_ranges = np.zeros_like(max_temperatures, dtype=float)
  for i in range(len(max_temperatures)):
      celsius_temperature_ranges[i] = (max_temperatures[i] - min_temperatures[i]) * 5/9
  celsius_temperature_ranges
#+end_src


** q3_1
#+begin_src python 
  waiting_times = Table.read_table('old_faithful.csv').column('waiting')

  shortest = min(waiting_times)
  longest = max(waiting_times)
  average = 0
  for i in range(len(waiting_times)):
      average += waiting_times[i]
  average /= len(waiting_times)

  print("Old Faithful erupts every", shortest, "to", longest, "minutes and every", average, "minutes on average.")
#+end_src


** q3_2
~np.diff()~ is the right - left, which is increase value,  so you need to find the minimum.

#+begin_src python 
  # np.diff() calculates the difference between subsequent values in a NumPy array
  # where the first value is subtracted from the second value

  differences = np.diff(waiting_times)
  biggest_decrease = np.abs(np.min(differences))
  biggest_decrease
#+end_src


* Local Variables

# Local Variables:
# org-babel-python-command: "./materials-sp25/.venv/bin/python"
# End:


