#+title: Lecture: Data8 Foundations of Data Science

* lecture 01

nothing important


* unrecorded

* unrecorded

* Data Types

** numbers

*** type
convert to float after division. 
#+begin_src python
  print(type(3))
  print(type(3/1))
  print(type(3*1))
#+end_src

#+RESULTS:
: <class 'int'>
: <class 'float'>
: <class 'int'>

*** limit of float number

too large to be inf,
too small to be zero. 

#+begin_src python
  print(2e306 * 100)
  print(2e-322 / 100)
#+end_src

#+RESULTS:
: inf
: 0.0

** Strings

*** connect

#+begin_src python
  st = "data" + " " + "science"
  print(st)
#+end_src

#+RESULTS:
: data science


*** str function

#+begin_src python
  st = "That's " + str(1+1) + ' ' + str(True)
  print(st)
#+end_src

#+RESULTS:
: That's 2 True


*** More Methods

**** upper and lower

#+begin_src python 
  print("upper".upper())
  print("UPPER".lower())  
#+end_src

#+RESULTS:
: UPPER
: upper


**** replace

#+begin_src python
  print("hit!!!".replace('hit', 'miss'))
#+end_src

#+RESULTS:
: miss!!!

* Sequences
** Arrays

*** datascience
#+begin_src python
  words = make_array("Hello", "World", "!")
  print(words)
  print()

  print(words + "plus")
  print()

  print(words.size)
#+end_src

#+RESULTS:
: ['Hello' 'World' '!']
: 
: ['Helloplus' 'Worldplus' '!plus']
: 
: 3

*** numpy
:PROPERTIES:
:ID:       29d7c0ee-7851-4f76-bd49-ab20b9569bb9
:END:

#+begin_src python
  import numpy as np

  n = make_array(0, 1, 2, 3, 4)
  print(np.diff(n)) # right - left
#+end_src

#+RESULTS:
: [1 1 1 1]


#+DOWNLOADED: screenshot @ 2025-07-22 23:49:08
[[file:img/2025-07-22_23-49-08_screenshot.png]]



#+DOWNLOADED: screenshot @ 2025-07-22 23:49:25
[[file:img/2025-07-22_23-49-25_screenshot.png]]



#+DOWNLOADED: screenshot @ 2025-07-22 23:49:39
[[file:img/2025-07-22_23-49-39_screenshot.png]]


*** ranges

#+begin_src python
  import numpy as np
  print(np.arange(5))
  print(np.arange(5, 10))
  print(np.arange(0, 10 , 2))
#+end_src

#+RESULTS:
: [0 1 2 3 4]
: [5 6 7 8 9]
: [0 2 4 6 8]


* Tables
:PROPERTIES:
:HEADER-ARGS: :python :prologue "from datascience import *"
:END:



** Sorting Rows

#+begin_src python 
  file_path = "./materials-sp25/lec/lec06/nba_salaries.csv"
  nba_salaries = Table.read_table(file_path)
  print(nba_salaries.relabeled("salary", "SALARY").sort('SALARY', descending=True))
#+end_src

#+RESULTS:
#+begin_example
rank | name              | position | team                  | SALARY   | season
1    | Stephen Curry     | PG       | Golden State Warriors | 40231758 | 2020
2    | Chris Paul        | PG       | Oklahoma City Thunder | 38506482 | 2020
3    | Russell Westbrook | PG       | Houston Rockets       | 38506482 | 2020
4    | John Wall         | PG       | Washington Wizards    | 38199000 | 2020
5    | Kevin Durant      | SF       | Brooklyn Nets         | 38199000 | 2020
6    | James Harden      | SG       | Houston Rockets       | 38199000 | 2020
1    | Stephen Curry     | PG       | Golden State Warriors | 37457154 | 2018
1    | Stephen Curry     | PG       | Golden State Warriors | 37457154 | 2019
7    | LeBron James      | SF       | Los Angeles Lakers    | 37436858 | 2020
2    | Chris Paul        | PG       | Houston Rockets       | 35654150 | 2019
... (9446 rows omitted)
#+end_example

** Selecting Rows

#+begin_src python 
  import numpy as np
  file_path = "./materials-sp25/lec/lec06/nba_salaries.csv"
  nba = Table.read_table(file_path)

  print(nba.take(0))
  print()

  print(nba.take(np.arange(3,6)))
  print()

  print(nba.where('salary', are.above(10)).take(np.arange(1,3)))
  print()

  print(nba.where('name', are.equal_to('Stephen Curry')).where('season', are.equal_to(2010)))
#+end_src

#+RESULTS:
#+begin_example
rank | name             | position | team               | salary   | season
1    | Shaquille O'Neal | C        | Los Angeles Lakers | 17142000 | 2000

rank | name           | position | team                   | salary   | season
4    | Juwan Howard   | PF       | Washington Wizards     | 15000000 | 2000
5    | Scottie Pippen | SF       | Portland Trail Blazers | 14795000 | 2000
6    | Karl Malone    | PF       | Utah Jazz              | 14000000 | 2000

rank | name            | position | team                   | salary   | season
2    | Kevin Garnett   | PF       | Minnesota Timberwolves | 16806000 | 2000
3    | Alonzo Mourning | C        | Miami Heat             | 15004000 | 2000

rank | name          | position | team                  | salary  | season
227  | Stephen Curry | PG       | Golden State Warriors | 2710560 | 2010
#+end_example


* Local Variable

# Local Variables:
# org-babel-python-command: "./materials-sp25/.venv/bin/python"
# End:
